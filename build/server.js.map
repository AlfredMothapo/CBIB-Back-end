{"version":3,"sources":["../server.js"],"names":["express","require","cors","bodyParser","app","use","static","corsOptions","origin","optionsSuccessStatus","jsonParser","json","get","req","resp","getBasic","getBasicById","post","saveResearchOutput","deleteById","getUsers","getAuthors","loginUser","saveNode","getDetailedInformation","getDetailed","createAccount","userRecyclingBin","retrieveResearch","delete","deletePermanently","put","editResearchOutput","addAuthor","removeAuthor","accountDetails","editAccount","deleteAccount","getPublicationTypes","accountConfirmation","setPassword","getPublications","listen","console","log"],"mappings":"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","file":"server.js","sourcesContent":["//imports\r\nimport { PublicationController } from './controllers/publicationController';\r\nimport { ResearchOutputController } from './controllers/researchOutputController';\r\nimport { UserController } from './controllers/userController';\r\nimport { LoginController } from './controllers/loginController';\r\nimport { NodeController } from './controllers/nodeController';\r\nimport { GlobalAdminController } from './controllers/globalAdminController';\r\nimport { RecyclingBinController } from './controllers/recyclingBinController';\r\n//other required modules\r\nconst express = require('express'); //for converting circular objects to json\r\nconst cors = require('cors'); //cross-site orign\r\nconst bodyParser = require('body-parser');\r\n\r\nconst app = express(); //express app\r\n//middlewares\r\napp.use(express.static('public')); //serve static files\r\napp.use(cors()); //enables all cors requests\r\n\r\nconst corsOptions = {\r\n    origin: 'http://localhost:8080',\r\n    optionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204\r\n};\r\nconst jsonParser = bodyParser.json(); //process json post request's body\r\n//==============================================================================\r\n                            ///routes\r\n//==============================================================================\r\n\r\n// 1.get basic research_outputs\r\napp.get('/basic-research-output', cors(corsOptions),\r\n(req, resp) => { //returns all research outputs.\r\n  ResearchOutputController.getBasic(req, resp);\r\n});\r\n// 2. get research_output given the id\r\napp.get('/basic-research-output/:id',\r\n(req, resp) => {\r\n  ResearchOutputController.getBasicById(req, resp);\r\n});\r\n// 3. Create a new research output.\r\napp.post('/outputs', jsonParser, (req, resp) => {\r\n  ResearchOutputController.saveResearchOutput(req, resp);\r\n});\r\n\r\n// 4. Delete a research output by id.\r\napp.get('/delete-research/:id',\r\n(req, resp) => {\r\n  ResearchOutputController.deleteById(req, resp);\r\n});\r\n// 5. get all users\r\napp.get('/get-users', (req, resp) => {\r\n  UserController.getUsers(req, resp);\r\n});\r\napp.get('/get-authors', (req, resp) => {\r\n  UserController.getAuthors(req, resp);\r\n});\r\n// 6. login\r\napp.post('/login', jsonParser, (req, resp) => {\r\n  LoginController.loginUser(req, resp);\r\n});\r\napp.post('/create-node', jsonParser, (req, resp) => {\r\n  NodeController.saveNode(req, resp);\r\n});\r\n//7. Returns all the details of the research\r\napp.get('/detailed-research-output/:id',\r\n(req, resp) => {\r\n  ResearchOutputController.getDetailedInformation(req, resp);\r\n});\r\napp.get('/detailed-research-output',\r\n(req, resp) => {\r\n  ResearchOutputController.getDetailed(req, resp);\r\n});\r\n//8. Create new account\r\napp.post('/create-account', jsonParser, (req, resp) => {\r\n  GlobalAdminController.createAccount(req, resp);\r\n});\r\n//.9 For user to view all their researches on the recycling bin\r\napp.get('/user-recycling-bin/:id', (req, resp) => {\r\n  RecyclingBinController.userRecyclingBin(req, resp);\r\n});\r\n// 10. retrieve a research from the bin for a research with given ro_id\r\napp.get('/retrieve-research/:id', (req, resp) => {\r\n  RecyclingBinController.retrieveResearch(req, resp);\r\n});\r\napp.delete('/delete-permanently/:id', jsonParser, (req, resp) => {\r\n  RecyclingBinController.deletePermanently(req, resp);\r\n});\r\n//12. edit an existing ro\r\napp.put('/edit-research-output', jsonParser, (req, resp) => {\r\n  ResearchOutputController.editResearchOutput(req, resp);\r\n});\r\n//13. Add an author to an existing research\r\napp.post('/add-author', jsonParser, (req, resp) => {\r\n  ResearchOutputController.addAuthor(req, resp);\r\n});\r\n//14. Remove an author from a research\r\napp.delete('/remove-author', jsonParser, (req, resp) => {\r\n  ResearchOutputController.removeAuthor(req, resp);\r\n});\r\n//15. For a user to view their account details\r\napp.get('/account-details/:id', (req, resp) => {\r\n  UserController.accountDetails(req, resp);\r\n});\r\n// 16. edit account details\r\napp.put('/edit-account', jsonParser, (req, resp) => {\r\n  GlobalAdminController.editAccount(req, resp);\r\n});\r\n// 17. delete user_id\r\napp.delete('/delete-user/:id', (req, resp) => {\r\n  GlobalAdminController.deleteAccount(req, resp);\r\n});\r\n// 18. returns all publications with their ids\r\napp.get('/get-publication-types', (req, resp) => {\r\n  ResearchOutputController.getPublicationTypes(req, resp);\r\n});\r\n// 19. for user to confirm their account with a verification token\r\napp.get('/account-confirmation/:id', (req, resp) => {\r\n  UserController.accountConfirmation(req, resp);\r\n});\r\n//. 20. for user to set a password for the first time\r\napp.put('/set-password/', jsonParser, (req, resp) => {\r\n  UserController.setPassword(req, resp);\r\n});\r\napp.get('/get-publication-types', (req, resp) => {\r\n  PublicationController.getPublications(req, resp);\r\n})\r\n//start the server on port 3000\r\napp.listen(3000, () => {\r\n  console.log('server started: listening at port:3000');\r\n});\r\n"]}