{"version":3,"sources":["../src/server.js"],"names":["db_con","connection","getConnection","stringify","require","express","cors","fs","app","use","static","get","req","resp","response","sql","query","err","result","fields","outputs","end","listen","console","log"],"mappings":";;AACA;;AACA;AACA,IAAIA,SAAS,0BAAb,C,CAHA;;AAIA,IAAIC,aAAaD,OAAOE,aAAP,EAAjB;AACA;AACA,IAAIC,YAAYC,QAAQ,qBAAR,CAAhB;AACA,IAAIC,UAAUD,QAAQ,SAAR,CAAd,C,CAAkC;AAClC,IAAIE,OAAOF,QAAQ,MAAR,CAAX,C,CAA4B;AAC5B,IAAIG,KAAKH,QAAQ,IAAR,CAAT,C,CAAwB;AACxB,IAAII,MAAMH,SAAV;AACA;AACAG,IAAIC,GAAJ,CAAQJ,QAAQK,MAAR,CAAe,QAAf,CAAR,E,CAAmC;AACnCF,IAAIC,GAAJ,CAAQH,MAAR,E,CAAiB;;AAEjB;AACAE,IAAIG,GAAJ,CAAQ,GAAR,EAAY,UAAUC,GAAV,EAAcC,IAAd,EAAoB;AAAE;AAC9B,QAAIC,WAAU,EAAd;AACA,QAAIC,MAAM,oNACN,kFADJ;AAEAd,eAAWe,KAAX,CAAiBD,GAAjB,EAAqB,UAAUE,GAAV,EAAcC,MAAd,EAAqBC,MAArB,EAA6B;AAC9C,YAAGF,GAAH,EAAQ,MAAMA,GAAN;AACRH,iBAASM,OAAT,GAAmBF,MAAnB;AACAL,aAAKQ,GAAL,CAASlB,UAAUW,QAAV,EAAmB,IAAnB,EAAwB,CAAxB,CAAT;AACH,KAJD;AAKH,CATD;;AAWAN,IAAIc,MAAJ,CAAW,IAAX,EAAgB,MAAI;AAClBC,YAAQC,GAAR,CAAY,wCAAZ;AACD,CAFD","file":"server.js","sourcesContent":["//imports\r\nimport { DBcon } from \"./db_connection\";\r\n//database connection\r\nlet db_con = new DBcon();\r\nlet connection = db_con.getConnection();\r\n//other required modules\r\nlet stringify = require('json-stringify-safe');\r\nlet express = require('express'); //for converting circular objects to json\r\nlet cors = require(\"cors\"); //cross-site orign\r\nlet fs = require(\"fs\"); //file system\r\nlet app = express();\r\n//middlewares\r\napp.use(express.static(\"public\")); //serve static files\r\napp.use(cors()); //enables all cors requests\r\n\r\n//routes\r\napp.get(\"/\",function (req,resp) { //returns all research outputs.\r\n    var response ={};\r\n    var sql = \"select title,type,publication_year,additional_info,first_name as author from users INNER JOIN authors ON users.user_id = authors.author_id INNER JOIN research_outputs ON research_outputs.ro_id=authors.ro_id \" +\r\n        \"INNER JOIN research_types ON  research_outputs.ro_type  = research_types.type_id\";\r\n    connection.query(sql,function (err,result,fields) {\r\n        if(err) throw err;\r\n        response.outputs = result;\r\n        resp.end(stringify(response,null,1));\r\n    })\r\n})\r\n\r\napp.listen(3000,()=>{\r\n  console.log(\"server started: listening at port:3000\");\r\n});\r\n"]}