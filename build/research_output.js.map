{"version":3,"sources":["../src/research_output.js"],"names":["ResearchOutput","constructor","title","pubYear","addInfo","type","publication_year","additional_info","db_con","proof_verified","proof_link","connection","getConnection","getProofVerified","getProofLink","save","sql","Promise","query","error"],"mappings":";;;;;;;AAAA;;AACA;AACO,MAAMA,cAAN,CAAqB;AACxBC,gBAAYC,KAAZ,EAAmBC,OAAnB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2C;AACvC,aAAKH,KAAL,GAAaA,KAAb;AACA,aAAKI,gBAAL,GAAwBH,OAAxB;AACA,aAAKI,eAAL,GAAuBH,OAAvB;AACA,aAAKC,IAAL,GAAYA,IAAZ,CAJuC,CAIrB;AAClB,aAAKG,MAAL,GAAc,0BAAd;AACA,aAAKC,cAAL,GAAsB,CAAtB;AACA,aAAKC,UAAL,GAAkB,KAAlB;AACA,aAAKC,UAAL,GAAkB,KAAKH,MAAL,CAAYI,aAAZ,EAAlB,CARuC,CAQQ;AAClD;AACDC,uBAAmB;AACjB,eAAO,KAAKJ,cAAZ;AACD;AACDK,mBAAe;AACb,eAAO,KAAKJ,UAAZ;AACD;AACDK,WAAO;AAAE;AACL,cAAMC,MAAM,2DACZ,iFADA;;AAGA,eAAO,IAAIC,OAAJ,CAAY,MAAM;AACpB,iBAAKN,UAAL,CAAgBO,KAAhB,CAAsBF,GAAtB,EAA2B,CAAC,KAAKd,KAAN,EAAa,KAAKI,gBAAlB,EAAoC,KAAKD,IAAzC,EACzB,KAAKE,eADoB,EAEzB,KAAKG,UAFoB,EAER,KAAKD,cAFG,CAA3B,EAGIU,KAAD,IAAW;AACX,oBAAIA,KAAJ,EAAW;AACT,0BAAMA,KAAN;AACD;AACJ,aAPA;AAQJ,SATM,CAAP;AAUH;AA/BuB;QAAfnB,c,GAAAA,c","file":"research_output.js","sourcesContent":["import { DBcon } from './db_connection';\r\n//\r\nexport class ResearchOutput {\r\n    constructor(title, pubYear, addInfo, type) {\r\n        this.title = title;\r\n        this.publication_year = pubYear;\r\n        this.additional_info = addInfo;\r\n        this.type = type; //Hardcoded here need to be int from Drop down values in front-end\r\n        this.db_con = new DBcon();\r\n        this.proof_verified = 0;\r\n        this.proof_link = 'www';\r\n        this.connection = this.db_con.getConnection(); //db connection\r\n    }\r\n    getProofVerified() {\r\n      return this.proof_verified;\r\n    }\r\n    getProofLink() {\r\n      return this.proof_link;\r\n    }\r\n    save() { //this function saves details of a research output.\r\n        const sql = 'INSERT INTO research_outputs(title, publication_year, ' +\r\n        'ro_type, additional_info, proof_link, proof_verified) VALUES (?, ?, ?, ?, ?, ?)';\r\n\r\n        return new Promise(() => {\r\n             this.connection.query(sql, [this.title, this.publication_year, this.type,\r\n               this.additional_info,\r\n               this.proof_link, this.proof_verified],\r\n                (error) => {\r\n                if (error) {\r\n                  throw error;\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n"]}